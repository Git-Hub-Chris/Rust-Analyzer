[9; 10) 'x': &i32
[18; 259) '{     ...c }; }': ()
[28; 29) 'y': &i32
[32; 33) 'x': &i32
[43; 45) '&z': &i32
[44; 45) 'z': i32
[48; 49) 'x': &i32
[59; 60) 'a': i32
[63; 64) 'z': i32
[74; 80) '(c, d)': (i32, &str)
[75; 76) 'c': i32
[78; 79) 'd': &str
[83; 95) '(1, "hello")': (i32, &str)
[84; 85) '1': i32
[87; 94) '"hello"': &str
[102; 152) 'for (e...     }': ()
[106; 112) '(e, f)': ([unknown], [unknown])
[107; 108) 'e': [unknown]
[110; 111) 'f': [unknown]
[116; 125) 'some_iter': [unknown]
[126; 152) '{     ...     }': ()
[140; 141) 'g': [unknown]
[144; 145) 'e': [unknown]
[158; 205) 'if let...     }': ()
[165; 170) '[val]': [unknown]
[173; 176) 'opt': [unknown]
[177; 205) '{     ...     }': ()
[191; 192) 'h': [unknown]
[195; 198) 'val': [unknown]
[215; 221) 'lambda': [unknown]
[224; 256) '|a: u6...b; c }': [unknown]
[225; 226) 'a': u64
[233; 234) 'b': u64
[236; 237) 'c': i32
[244; 256) '{ a + b; c }': i32
[246; 247) 'a': u64
[246; 251) 'a + b': u64
[250; 251) 'b': u64
[253; 254) 'c': i32
